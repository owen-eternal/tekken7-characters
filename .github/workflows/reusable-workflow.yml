name: Build, Test and Deploy Tekken7 API

on:
  workflow_call:
    inputs:
      environ:
        required: true
        type: string
    secrets:
      aws-account-id:
        required: true
      aws_region:
        required: true
      snyk_token:
        required: true
      tekken7-oidc-role-arn:
        required: true

jobs:
  # build_app:
  #   # runs-on: ubuntu-latest
  #   # strategy:
  #   #   matrix:
  #   #     python-version: [3.8]
  #   # environment: ${{ inputs.environ }}
  #   # services:
  #   #   postgres:
  #   #     image: postgres
  #   #     env:
  #   #       POSTGRES_USER: postgres
  #   #       POSTGRES_PASSWORD: mysecretpassword
  #   #     ports:
  #   #       - 5432:5432
  #   #     options: >-
  #   #       --health-cmd pg_isready
  #   #       --health-interval 10s
  #   #       --health-timeout 5s
  #   #       --health-retries 5
  #   # steps:
  #   # - uses: actions/checkout@v3
  #   # - name: Set up Python
  #   #   uses: actions/setup-python@v3
  #   #   with:
  #   #     python-version: ${{ matrix.python-version }}

  #   # - name: Install app dependencies
  #   #   run: |
  #   #     python -m pip install --upgrade pip
  #   #     pip install coverage flake8
  #   #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  #   # - name: Lint with flake8
  #   #   run: if [ flake8 . --count --show-source --statistics ]; then echo 'looking stylish ðŸ˜Ž'; fi

  #   # - name: Run database migrations
  #   #   run: python3 manage.py migrate

  #   # - name: Run unit tests
  #   #   run: |
  #   #     coverage run manage.py test
  #   #     coverage report
  
  build_image:
    environment: ${{ inputs.environ }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.tekken7-oidc-role-arn }}
          aws-region: ${{ secrets.aws_region }}

      - name: Build and Tag Tekken Image.
        run: |
          docker build -t ${GITHUB_REPOSITORY}:${GITHUB_RUN_NUMBER} -f Dockerfile.app .
          docker tag ${GITHUB_REPOSITORY}:${GITHUB_RUN_NUMBER} ${{ secrets.aws-account-id }}.dkr.ecr.eu-west-1.amazonaws.com/${GITHUB_REPOSITORY}:${GITHUB_RUN_NUMBER}

      - name: List Images.
        run: Docker images

      # - name: Run Snyk to check Docker images for vulnerabilities
      #   uses: snyk/actions/docker@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.snyk_token }}
      #   with:
      #     image: ${GITHUB_REPOSITORY}:${GITHUB_RUN_NUMBER}
      #     args: --file=Dockerfile.app
      #   continue-on-error: true

      # - name: Upload Sarif file
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: snyk.sarif
      #     category: ${{ inputs.environ }}-analysis-tool
